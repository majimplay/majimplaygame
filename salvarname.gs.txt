/**
 * ID da sua planilha Google.
 * Você pode encontrar isso na URL da sua planilha:
 * https://docs.google.com/spreadsheets/d/ID_DA_PLANILHA/edit
 */
const SPREADSHEET_ID = '1EYUPZjfdnPJz9tI9yJFN1cVoiy9Fs3HABqFZFaz4r2A';

/**
 * Nome da página (aba) dentro da sua planilha onde os dados serão salvos.
 * Certifique-se de que esta aba exista na sua planilha.
 * Se for a primeira aba, geralmente é 'Página1' ou 'Sheet1'. Verifique o nome exato.
 */
const SHEET_NAME = 'dado'; // <-- VERIFIQUE E AJUSTE SE NECESSÁRIO

/**
 * Função que é executada quando o script recebe uma requisição POST.
 * @param {Object} e - O objeto de evento que contém os dados da requisição.
 * e.postData.contents contém o corpo da requisição (JSON string).
 */
function doPost(e) {
  try {
    // Abre a planilha pelo ID
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    // Acessa a aba específica pelo nome
    const sheet = ss.getSheetByName(SHEET_NAME);

    // Verifica se a aba foi encontrada
    if (!sheet) {
      throw new Error(`Aba "${SHEET_NAME}" não encontrada na planilha.`);
    }

    // Analisa os dados JSON recebidos no corpo da requisição
    const data = JSON.parse(e.postData.contents);

    // Verifica se o campo 'nome' existe nos dados recebidos
    if (!data.nome) {
      throw new Error("O campo 'nome' não foi encontrado nos dados recebidos.");
    }

    // Pega o nome recebido
    const nome = data.nome;
    // Cria um timestamp (data e hora atuais)
    const timestamp = new Date();

    // Adiciona uma nova linha na planilha com o timestamp e o nome
    // A ordem aqui define a ordem das colunas na planilha (Coluna A: Timestamp, Coluna B: Nome)
    sheet.appendRow([timestamp, nome]);

    // Retorna uma resposta de sucesso (embora 'no-cors' no cliente impeça a leitura)
    // É útil para depuração se você testar o script diretamente.
    return ContentService.createTextOutput(JSON.stringify({ status: 'success', message: 'Nome adicionado com sucesso.' }))
      .setMimeType(ContentService.MimeType.JSON);

  } catch (error) {
    // Loga o erro no console do Apps Script para depuração
    Logger.log(`Erro ao processar POST: ${error.message}`);
    Logger.log(`Dados recebidos: ${e.postData ? e.postData.contents : 'Nenhum dado'}`);

    // Retorna uma resposta de erro (embora 'no-cors' no cliente impeça a leitura)
    return ContentService.createTextOutput(JSON.stringify({ status: 'error', message: error.message }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}

// Função de teste opcional para verificar se o script consegue acessar a planilha
function testAppend() {
  try {
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const sheet = ss.getSheetByName(SHEET_NAME);
    if (!sheet) {
      Logger.log(`Erro no teste: Aba "${SHEET_NAME}" não encontrada.`);
      return;
    }
    sheet.appendRow([new Date(), "Nome de Teste"]);
    Logger.log("Linha de teste adicionada com sucesso.");
  } catch (error) {
    Logger.log(`Erro no teste: ${error.message}`);
  }
}

